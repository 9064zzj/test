/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package my.library;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.sql.*;
import java.awt.Frame;
import java.awt.event.*;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Calendar;
import java.util.Date;
import javax.swing.*;
import javax.swing.table.*;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;


/**
 *
 * @author zhongjiezheng
 */
public class GUI extends javax.swing.JFrame {
    
    public boolean BookSearchMode=true;     //true for Full name Search
    public String CheckOutBookID;
    public String CheckInBookID;
    public String Borrower;
    public String Author;
    public String Lname,Fname,Minit;
    public String Title ;
    public String BranchID;
    public String CheckOutCardNo;
    public String CheckInCardNo;
    public String SelectBookid= new String("");
    public String SelectBranchid= new String("");
    public String CheckInLoanID;
    public String FineLoanID;
    public String AddFname, AddLname,AddAddress,AddPhone1,AddPhone2,AddPhone3;
    public String FineCardNo;
    public String FineLname,FineFname;
    public String FinePhone1,FinePhone2,FinePhone3;
    
    public int    NewCardNo;
    public float CheckInFine;        
    
    Vector<Vector<String>> Bookresult;
    Vector<Vector<String>> Loanresult;
    Vector<Vector<String>> Fineresult;
    Vector<String>  Bookcolumn;
    Vector<String>  Loancolumn;
    Vector<String>  Finecolumn;
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jTextField13 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextField20 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jTextField22 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jTextField10 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Book Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(153, 153, 153)));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Book ID:");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Title:");

        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });

        jTextField2.setForeground(new java.awt.Color(51, 51, 51));
        jTextField2.setText("Full Title or Keyword");
        jTextField2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField2MouseClicked(evt);
            }
        });

        jTextField3.setForeground(new java.awt.Color(51, 51, 51));
        jTextField3.setText("Full Name or Keyword");
        jTextField3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField3MouseClicked(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jRadioButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jRadioButton1.setText("Full Author :");
        jRadioButton1.setSelected(true);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jRadioButton2.setText("Part Author");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jTextField13.setText("Fname");
        jTextField13.setEnabled(false);
        jTextField13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField13MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("-");

        jTextField14.setEnabled(false);
        jTextField14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField14MouseClicked(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setText("-");

        jTextField15.setText("Lname");
        jTextField15.setEnabled(false);
        jTextField15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField15MouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(11, 11, 11)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jRadioButton1)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jTextField2)
                            .add(jTextField1))
                        .add(31, 31, 31)
                        .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 102, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 188, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jRadioButton2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel14)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 136, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton2))
                .add(10, 10, 10)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jRadioButton1)
                    .add(jRadioButton2)
                    .add(jTextField13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel14)
                    .add(jTextField15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jButton1.setText("Check Out");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTable1);

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(18, 18, 18)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 158, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(83, 83, 83))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane4)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(13, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(30, 30, 30)
                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 343, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton1)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Book Check Out", jPanel3);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Loans Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.gray));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Book ID:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Card No.");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Borrower Name:");

        jTextField4.setForeground(new java.awt.Color(51, 51, 51));
        jTextField4.setText("Full or Partial ID");
        jTextField4.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        jTextField4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField4MouseClicked(evt);
            }
        });

        jTextField5.setForeground(new java.awt.Color(51, 51, 51));
        jTextField5.setText("Full Card No.");
        jTextField5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField5MouseClicked(evt);
            }
        });

        jTextField6.setForeground(new java.awt.Color(51, 51, 51));
        jTextField6.setText("Full or Partial Name");
        jTextField6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField6MouseClicked(evt);
            }
        });

        jButton3.setText("Search");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel6)
                    .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jLabel4)
                        .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(18, 18, 18)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jTextField5)
                    .add(jTextField6)
                    .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 465, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(26, 26, 26)
                .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 102, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(16, 16, 16))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton3))
                .add(18, 18, 18)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(jTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jButton4.setText("Check In");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable3);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 777, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 158, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(84, 84, 84))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(13, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(31, 31, 31)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 339, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton4)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Book Check In", jPanel2);

        jButton6.setText("Pay");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable4);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fines Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.gray));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setText("Card No. ");

        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setText("Phone :");

        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setText("Borrower Name:");

        jTextField16.setForeground(new java.awt.Color(51, 51, 51));
        jTextField16.setText("Full Card No.");
        jTextField16.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        jTextField16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField16MouseClicked(evt);
            }
        });

        jTextField17.setForeground(new java.awt.Color(51, 51, 51));
        jTextField17.setText("First Name");
        jTextField17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField17MouseClicked(evt);
            }
        });

        jButton7.setText("Search");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel18.setText("(");

        jTextField19.setForeground(new java.awt.Color(51, 51, 51));
        jTextField19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField19MouseClicked(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel19.setText(") -");

        jTextField20.setForeground(new java.awt.Color(51, 51, 51));
        jTextField20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField20MouseClicked(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel20.setText("-");

        jTextField21.setForeground(new java.awt.Color(51, 51, 51));
        jTextField21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField21MouseClicked(evt);
            }
        });

        jTextField22.setText("Last Name");
        jTextField22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField22MouseClicked(evt);
            }
        });

        jLabel21.setText("-");

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel17)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                        .add(jLabel15)
                        .add(16, 16, 16))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jLabel18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel19)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel20)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel7Layout.createSequentialGroup()
                                .add(jTextField17)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel21)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jTextField22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 237, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jTextField16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 465, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(26, 26, 26)
                        .add(jButton7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 102, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(16, 16, 16))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton7)
                    .add(jLabel17)
                    .add(jTextField22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel21))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(18, 18, 18)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 777, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jButton6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 158, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(84, 84, 84))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(13, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(31, 31, 31)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 339, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton6)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Fine Manage", jPanel4);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Input Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.gray));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("First Namr :");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Last Name :");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("Address:");

        jTextField7.setForeground(new java.awt.Color(51, 51, 51));
        jTextField7.setText("Required");
        jTextField7.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        jTextField7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField7MouseClicked(evt);
            }
        });

        jTextField8.setForeground(new java.awt.Color(51, 51, 51));
        jTextField8.setText("Required");
        jTextField8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField8MouseClicked(evt);
            }
        });

        jTextField9.setForeground(new java.awt.Color(51, 51, 51));
        jTextField9.setText("Required");
        jTextField9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField9MouseClicked(evt);
            }
        });

        jButton5.setText("Add");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        jTextField10.setForeground(new java.awt.Color(51, 51, 51));
        jTextField10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField10MouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Phone :");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("(");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText(") -");

        jTextField11.setForeground(new java.awt.Color(51, 51, 51));
        jTextField11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField11MouseClicked(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("-");

        jTextField12.setForeground(new java.awt.Color(51, 51, 51));
        jTextField12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField12MouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(88, Short.MAX_VALUE)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel9)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel7)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel8)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel10))
                .add(18, 18, 18)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jTextField8)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jTextField9)
                            .add(jTextField7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE))
                        .add(26, 26, 26)
                        .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 102, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jLabel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel12)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel13)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(16, 16, 16))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton5))
                .add(18, 18, 18)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(jTextField9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(413, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("New Borrower", jPanel6);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 674, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
        AddFname=jTextField7.getText();
        AddLname=jTextField8.getText();
        AddAddress=jTextField9.getText();
        AddPhone1=jTextField10.getText();
        AddPhone2=jTextField11.getText();
        AddPhone3=jTextField12.getText();
        BorrowerNullCheck();
        if( ("".equals(AddPhone1) && "".equals(AddPhone2) && "".equals(AddPhone3))  ||  (!"".equals(AddPhone1) && !"".equals(AddPhone2) && !"".equals(AddPhone3)) ){
            if(!"".equals(AddFname) && !"".equals(AddLname) && !"".equals(AddAddress))
                if(!CheckDuplicate())
                    AddBorrower();
                else
                    JOptionPane.showMessageDialog(null, "The borrower is already in the database", "WARNING", JOptionPane.ERROR_MESSAGE);
            else
                JOptionPane.showMessageDialog(null, "Please fill all the required information!", "WARNING", JOptionPane.ERROR_MESSAGE);
        }
        else{
            JOptionPane.showMessageDialog(null, "The Phone Number is invalid!", "WARNING", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_jButton5MouseClicked

    private void jTextField9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField9MouseClicked
        // TODO add your handling code here:
         jTextField9.setText("");
    }//GEN-LAST:event_jTextField9MouseClicked

    private void jTextField8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField8MouseClicked
        // TODO add your handling code here:
        jTextField8.setText("");
    }//GEN-LAST:event_jTextField8MouseClicked

    private void jTextField7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField7MouseClicked
        // TODO add your handling code here:
         jTextField7.setText("");
    }//GEN-LAST:event_jTextField7MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        CheckIn();
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        CheckInBookID=jTextField4.getText();
        CheckInCardNo=jTextField5.getText();
        Borrower=jTextField6.getText();
        LoanSearch();

    }//GEN-LAST:event_jButton3MouseClicked

    private void jTextField5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField5MouseClicked
        // TODO add your handling code here:
        jTextField5.setText("");
    }//GEN-LAST:event_jTextField5MouseClicked

    
    private void jTextField4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField4MouseClicked
        // TODO add your handling code here:
        jTextField4.setText("");
    }//GEN-LAST:event_jTextField4MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        CheckOutCardNo="";
        BranchID="";
        GetSelectRow1();
        JFrame frame = new JFrame("InputDialog");

        final Check_in dialog = new Check_in(frame,false);
        dialog.setVisible(rootPaneCheckingEnabled);
        dialog.jButton1.addActionListener(
            new ActionListener()
            {
                public void actionPerformed(ActionEvent e)
                {
                    JFrame temp=new JFrame("WARNING");
                    CheckOutCardNo=dialog.CardNo();
                    BranchID=dialog.BranchID();
                    CheckOutNullCheck3();
                    if(CheckOutCardNo.equals("") )
                    JOptionPane.showMessageDialog(null, "Card No. Can not be NULL!!", "WARNING", JOptionPane.WARNING_MESSAGE);
                    else{
                        dialog.close();
                        CheckOut();
                    }
                }
            }
        );

    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        SelectBookid="";
        SelectBranchid="";

        CheckOutBookID=jTextField1.getText();
        Title=jTextField2.getText();
        if(BookSearchMode){
            Author=jTextField3.getText();
            BookSearch1();
        }
        else{
            Fname=jTextField13.getText();
            Minit=jTextField14.getText();
            Lname=jTextField15.getText();
            BookSearch2();
        }
            
    }//GEN-LAST:event_jButton2MouseClicked

    private void jTextField3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField3MouseClicked
        // TODO add your handling code here:
        jTextField3.setText("");
    }//GEN-LAST:event_jTextField3MouseClicked

    private void jTextField2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField2MouseClicked
        // TODO add your handling code here:
        jTextField2.setText("");
    }//GEN-LAST:event_jTextField2MouseClicked

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        // TODO add your handling code here:
         jTextField1.setText("");
    }//GEN-LAST:event_jTextField1MouseClicked

    private void jTextField10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField10MouseClicked
        // TODO add your handling code here:
        jTextField10.setDocument(new JTextFieldLimit(3));
         jTextField10.setText("");
    }//GEN-LAST:event_jTextField10MouseClicked

    private void jTextField11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField11MouseClicked
        // TODO add your handling code here:
        jTextField11.setDocument(new JTextFieldLimit(3));
        jTextField11.setText("");
    }//GEN-LAST:event_jTextField11MouseClicked

    private void jTextField12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField12MouseClicked
        // TODO add your handling code here:
        jTextField12.setDocument(new JTextFieldLimit(4));
        jTextField12.setText("");
    }//GEN-LAST:event_jTextField12MouseClicked

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        jTextField13.setEnabled(false);
        jTextField14.setEnabled(false);
        jTextField15.setEnabled(false);
        jTextField3.setEnabled(true);
        
        jRadioButton1.setSelected(true);
        jRadioButton2.setSelected(false);
        BookSearchMode=true;
        
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        jTextField13.setEnabled(true);
        jTextField14.setEnabled(true);
        jTextField15.setEnabled(true);
        jTextField3.setEnabled(false);

        jRadioButton2.setSelected(true);
        jRadioButton1.setSelected(false);
        BookSearchMode=false;
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jTextField13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField13MouseClicked
        // TODO add your handling code here:
        jTextField13.setText("");
    }//GEN-LAST:event_jTextField13MouseClicked

    private void jTextField14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField14MouseClicked
        // TODO add your handling code here:
        jTextField14.setDocument(new JTextFieldLimit(1));
        jTextField14.setText("");
    }//GEN-LAST:event_jTextField14MouseClicked

    private void jTextField15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField15MouseClicked
        // TODO add your handling code here:
        jTextField15.setText("");
    }//GEN-LAST:event_jTextField15MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        // TODO add your handling code here:
        if(GetSelectRow3()){
            if(PayTheFine())
                JOptionPane.showMessageDialog(null, "Payment Made Successfully!", "Haha", JOptionPane.INFORMATION_MESSAGE);
            else
                JOptionPane.showMessageDialog(null, "Can't pay fine for a book that are not returned!", "WARNING", JOptionPane.ERROR_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(null, "Please select one row to pay!", "WARNING", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jButton6MouseClicked

    private void jTextField16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField16MouseClicked
        // TODO add your handling code here:
        jTextField16.setText("");
    }//GEN-LAST:event_jTextField16MouseClicked

    private void jTextField17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField17MouseClicked
        // TODO add your handling code here:
        jTextField17.setText("");
    }//GEN-LAST:event_jTextField17MouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        // TODO add your handling code here:
        FineCardNo=jTextField16.getText();
        FineFname=jTextField17.getText();
        FineLname=jTextField22.getText();
        FinePhone1=jTextField19.getText();
        FinePhone2=jTextField20.getText();
        FinePhone3=jTextField21.getText();
        FineSearch();
    }//GEN-LAST:event_jButton7MouseClicked

    private void jTextField6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField6MouseClicked
        // TODO add your handling code here:
        jTextField6.setText("");
    }//GEN-LAST:event_jTextField6MouseClicked

    private void jTextField19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField19MouseClicked
        // TODO add your handling code here:
        jTextField19.setDocument(new JTextFieldLimit(3));
        jTextField19.setText("");
        
    }//GEN-LAST:event_jTextField19MouseClicked

    private void jTextField20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField20MouseClicked
        // TODO add your handling code here:
        jTextField20.setDocument(new JTextFieldLimit(3));
        jTextField20.setText("");
    }//GEN-LAST:event_jTextField20MouseClicked

    private void jTextField21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField21MouseClicked
        // TODO add your handling code here:
        jTextField21.setDocument(new JTextFieldLimit(4));
        jTextField21.setText("");
    }//GEN-LAST:event_jTextField21MouseClicked

    private void jTextField22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField22MouseClicked
        // TODO add your handling code here:
        jTextField22.setText("");
    }//GEN-LAST:event_jTextField22MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////    Fine Search   /////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public void FineSearch(){
        ALLFineUpdate();
        FineNullCheck();
        doFineSearch();
        
    }
    
    public String FinerPhoneRegular(){
        
        StringBuilder Phone =new StringBuilder();
        if(!"".equals(FinePhone1) && !"".equals(FinePhone2) && !"".equals(FinePhone3)){
            Phone.append("(");
            Phone.append(FinePhone1);
            Phone.append(") ");
            Phone.append(FinePhone2);
            Phone.append("-");
            Phone.append(FinePhone3);
        }
        else
            Phone.append("");
        
        
        return Phone.toString();
    }
    
    public String GetFineString(){
        StringBuilder fine = new StringBuilder();
        String Phone=FinerPhoneRegular();
        
        if(FineCardNo.equals(""))
            fine.append("");
        else
            fine.append(" AND BORROWER.card_no='"+FineCardNo+"' ");
        
        if(Phone.equals(""))
            fine.append("");
        else
            fine.append(" AND Phone=\'"+Phone+"\'");
        
        return fine.toString();
    }
    
    public void doFineSearch(){
        Fineresult = new Vector<Vector<String>>();
        String append = GetFineString();
        DecimalFormat df = new DecimalFormat("0.00");
        
        
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement FineSearch = conn.createStatement();
            ResultSet FineResult= FineSearch.executeQuery(
            " SELECT BOOK_LOANS.loan_id, BORROWER.card_no,fname,lname,phone,book_id,branch_id,date_out,due_date,date_in,fine_amt,paid" +
            " FROM BORROWER, BOOK_LOANS, FINES" +
            " WHERE BORROWER.card_no=BOOK_LOANS.card_no AND FINES.loan_id=BOOK_LOANS.loan_id AND fine_amt<>'0.00' And paid=false " +
            " AND Fname LIKE '%"+FineFname+"%' AND Lname LIKE '%"+FineLname+"%' "+append+";");
            
            
            while(FineResult.next()){
                Vector<String> temp = new Vector<String>();
                String loan_id=FineResult.getString("loan_id");
                String card_no= FineResult.getString("card_no");
                String fname= FineResult.getString("fname");
                String lname= FineResult.getString("lname");
                String phone= FineResult.getString("phone");
                String book_id= FineResult.getString("book_id");
                String branch_id= FineResult.getString("branch_id");
                String date_out= FineResult.getString("date_out");
                String due_date= FineResult.getString("due_date");
                String date_in= FineResult.getString("date_in");
                String fine_amt= df.format(FineResult.getFloat("fine_amt"));
                boolean paid= FineResult.getBoolean("paid");

                temp= new Vector<String>(Arrays.asList(loan_id,card_no,fname,lname,phone,book_id,branch_id,date_out,due_date,date_in,fine_amt,String.valueOf(paid)));
                Fineresult.add(temp);
                
            }
            PrintFineSearch();
            FineResult.close();
            conn.close();
        }
        catch(SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error in connection: "+ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
    }
    }
    
    public void PrintFineSearch(){
        Finecolumn= new Vector<String>();
        Finecolumn.add("Loan ID");
        Finecolumn.add("Card No.");
        Finecolumn.add("Fname");
        Finecolumn.add("Lname");
        Finecolumn.add("Phone");
        Finecolumn.add("Book ID");
        Finecolumn.add("Branch ID");
        Finecolumn.add("Date Out");
        Finecolumn.add("Date Due");
        Finecolumn.add("Date In");
        Finecolumn.add("Fine");
        Finecolumn.add("Paid");
        DefaultTableModel Finemodel = new DefaultTableModel(Fineresult,Finecolumn);
        jTable4.setModel(Finemodel);
    }
    
    public void FineNullCheck(){
        FineCardNo=FineCardNo.trim();
        FineFname=FineFname.trim();
        FineLname=FineLname.trim();
        FinePhone1=FinePhone1.trim();
        FinePhone2=FinePhone2.trim();
        FinePhone3=FinePhone3.trim();
        
        
        if(FineCardNo==null)
            FineCardNo="";
        if(FineCardNo.equals("Full Card No."))
            FineCardNo="";
        
        if(FineFname==null)
            FineFname="";
        if(FineFname.equals("First Name"))
            FineFname="";
        
        if(FineLname==null)
            FineLname="";
        if(FineLname.equals("Last Name"))
            FineLname="";
        
        if(FinePhone1==null)
            FinePhone1="";
        if(FinePhone2==null)
            FinePhone2="";
        if(FinePhone3==null)
            FinePhone3="";
        
    }
    
    public void ALLFineUpdate(){
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
	Calendar CurrentDate = Calendar.getInstance();
        Date Current = CurrentDate.getTime();
	String DateString = dateFormat.format(Current).toString();
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement FineUpdate = conn.createStatement();
            FineUpdate.execute(
                   " UPDATE Fines, BOOK_LOANS" +
                   " SET fine_amt=0.25*IF (TIMESTAMPDIFF(DAY, due_date,'"+DateString+"')>0,TIMESTAMPDIFF(DAY,due_date,'"+DateString+"'  ),0), "+
                   " paid= IF(TIMESTAMPDIFF(DAY,due_date,'"+DateString+"')>0,false,null)" +
                   " WHERE Fines.loan_id=BOOK_LOANS.loan_id AND date_in is null;");
            FineUpdate.close();
            conn.close();
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Error in connection: "+ ex.getMessage(), "WARNING", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public boolean GetSelectRow3(){
        int Row=jTable4.getSelectedRow();
        if (Row<0)
            return false;   
        else{
            FineLoanID=(String) jTable4.getValueAt(Row, 0);
            FineLoanID=FineLoanID.trim();
            return true;
        }
    }
    
    public boolean PayTheFine(){
        String paid="0";
        
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement FinePay = conn.createStatement();
            FinePay.execute(
                    " UPDATE FINES, BOOK_LOANS" +
                    " SET paid=IF(date_in is not null,true,false)" +
                    " WHERE  FINES.loan_id=BOOK_LOANS.loan_id  AND FINES.loan_id='"+FineLoanID+"';");
            FinePay.close();
            Statement PayCheck = conn.createStatement();
            ResultSet PayResult=PayCheck.executeQuery(
                    " SELECT paid AS A" +
                    " FROM FINES" +
                    " WHERE loan_id='"+FineLoanID+"';");
            PayResult.next();
            paid=PayResult.getString("A");
            PayCheck.close();
            conn.close();
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Error in connection: "+ ex.getMessage(), "WARNING", JOptionPane.ERROR_MESSAGE);
        }
        if(paid.equals("1"))
            return true;
        else
            return false;

    }
    
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////    Add Borrower   /////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public void doNothing(){
        //just do nothing, I mean it.
    }
    
    public void BorrowerNullCheck(){
        AddFname=AddFname.trim();
        AddLname=AddLname.trim();
        AddAddress=AddAddress.trim();
        AddPhone1=AddPhone1.trim();
        AddPhone2=AddPhone2.trim();
        AddPhone3=AddPhone3.trim();
        
        if(AddFname.equals(null))
            AddFname="";
        if(AddLname.equals(null))
            AddLname="";
        if(AddAddress.equals(null))
            AddAddress="";
        if(AddPhone1.equals(null))
            AddPhone1="";
        if(AddPhone2.equals(null))
            AddPhone2="";
        if(AddPhone3.equals(null))
            AddPhone3="";
        
        if(AddFname.equals("Required"))
            AddFname="";
        if(AddLname.equals("Required"))
            AddLname="";
        if(AddAddress.equals("Required"))
            AddAddress="";
        
    }
  
    public boolean CheckDuplicate(){
        boolean flag=true;
        
        try {
            Connection conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement DuplicateSearch = conn1.createStatement();
            ResultSet Duplicate = DuplicateSearch.executeQuery(
                  " SELECT card_no" +
                  " FROM BORROWER" +
                  " WHERE Fname='"+AddFname+ "' AND Lname='"+AddLname+"' AND Address='"+AddAddress+"';");
            
            if(Duplicate.next())
                flag=true; 
            else
                flag=false;
            Duplicate.close();
            conn1.close();
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error in connection: "+ ex.getMessage(), "WARNING", JOptionPane.ERROR_MESSAGE);
        }
        
        return flag;
    }
    
    public void AddBorrower(){
        int LastNo=GetLastCardNo();
        String Phone=BorrowerPhoneRegular();
                
        if(LastNo==-1)
            doNothing();
        else
        {
             NewCardNo=LastNo+1;
             try{
                 Connection conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
                 Statement AddBorrower = conn1.createStatement();
                 AddBorrower.execute("INSERT INTO Borrower VALUES ('"+NewCardNo+"', '"+AddFname+"', '"+AddLname+"','"+AddAddress+"',"+Phone+");");
                 AddBorrower.close();
                 conn1.close();
                 JOptionPane.showMessageDialog(null, "Borrower Add Successfully!!\n"+"Borrower's Card No. is "+NewCardNo, "Haha", JOptionPane.INFORMATION_MESSAGE);
             }
             catch(SQLException ex){
                 JOptionPane.showMessageDialog(null, "Error in connection: "+ ex.getMessage(), "WARNING", JOptionPane.ERROR_MESSAGE);
             }
        }
    }
    
    public int GetLastCardNo(){
        int LastCardNo=-1;
        
        try {
            Connection conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement BorrowerSearch = conn1.createStatement();
            ResultSet CardNo = BorrowerSearch.executeQuery(
                  " SELECT MAX(card_no) AS A" +
                  " FROM BORROWER");
            CardNo.next();
            LastCardNo=CardNo.getInt("A");
            BorrowerSearch.close();
            conn1.close();
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error in connection: "+ ex.getMessage(), "WARNING", JOptionPane.ERROR_MESSAGE);
        }
        
        return LastCardNo;
    }
    
    public String BorrowerPhoneRegular(){
        
        StringBuilder Phone =new StringBuilder();
        if(!"".equals(AddPhone1) && !"".equals(AddPhone2) && !"".equals(AddPhone3)){
            Phone.append("'(");
            Phone.append(AddPhone1);
            Phone.append(") ");
            Phone.append(AddPhone2);
            Phone.append("-");
            Phone.append(AddPhone3+"'");
        }
        else
            Phone.append("null");
        
        
        return Phone.toString();
    }
    
    public class JTextFieldLimit extends PlainDocument {
        
        private int limit;

        JTextFieldLimit(int limit) {
            super();
            this.limit = limit;
       }

        public void insertString( int offset, String  str, AttributeSet attr ) throws BadLocationException {
            if (str == null) return;
            if ((getLength() + str.length()) <= limit) {
                super.insertString(offset, str, attr);
            }
         }
   }
    
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////     CHECK OUT   /////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public void BookSearch1(){
        Bookresult = new Vector<Vector<String>>();
        
        
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement BookSearch = conn.createStatement();
            CheckOutNullCheck1();
            ResultSet BookResult= BookSearch.executeQuery(
            " SELECT book.book_id, book.title, book_authors.author_name, fname,minit,lname, BOOK_COPIES.branch_id , BOOK_COPIES.No_of_copies, BOOK_COPIES.no_of_copies-count(DISTINCT loan_id) AS available_copies "+
            " FROM BOOK NATURAL JOIN BOOK_AUTHORS NATURAL JOIN BOOK_COPIES LEFT JOIN book_loans ON book_copies.book_id=book_loans.book_id AND book_copies.branch_id=book_loans.branch_id  AND BOOK_LOANS.date_in is null " +
            " WHERE author_name LIKE '%"+Author+"%' AND book.book_id LIKE '%"+CheckOutBookID+"%' AND title LIKE '%"+Title+"%' "+
            " GROUP BY book.book_id, book_copies.branch_id, Author_name;");
            
            
            while(BookResult.next()){
                Vector<String> temp = new Vector<String>();

                String book_id= BookResult.getString("book_id");
                String title = BookResult.getString("title");
                String authorName =BookResult.getString("author_name");
                String fname = BookResult.getString("fname");
                String minit = BookResult.getString("minit");
                String lname = BookResult.getString("lname");
                String branch_id = BookResult.getString("branch_id");
                String copies = BookResult.getString("No_of_copies");
                String available = BookResult.getString("available_copies");

                temp= new Vector<String>(Arrays.asList(book_id,title,authorName,fname,minit,lname,branch_id,copies,available));
                Bookresult.add(temp);
                
            }
            PrintBookSearch();
            BookResult.close();
            conn.close();
        }
        catch(SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error in connection: "+ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
    }
    }
    
    public void BookSearch2(){
        Bookresult = new Vector<Vector<String>>();
        String Author;
        
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement BookSearch = conn.createStatement();
            CheckOutNullCheck2();
            Author=NameRegular();
            ResultSet BookResult= BookSearch.executeQuery(
            " SELECT book.book_id, book.title, book_authors.author_name, fname,minit,lname, BOOK_COPIES.branch_id , BOOK_COPIES.No_of_copies, BOOK_COPIES.no_of_copies-count(DISTINCT loan_id) AS available_copies"+
            " FROM BOOK NATURAL JOIN BOOK_AUTHORS NATURAL JOIN BOOK_COPIES LEFT JOIN book_loans ON book_copies.book_id=book_loans.book_id AND book_copies.branch_id=book_loans.branch_id AND BOOK_LOANS.date_in is null" +
            " WHERE "+Author+" book.book_id LIKE '%"+CheckOutBookID+"%' AND title LIKE '%"+Title+"%' "+
            " GROUP BY book.book_id, book_copies.branch_id, Author_name;");
            
            
            while(BookResult.next()){
                Vector<String> temp = new Vector<String>();

                String book_id= BookResult.getString("book_id");
                String title = BookResult.getString("title");
                String authorName =BookResult.getString("author_name");
                String fname = BookResult.getString("fname");
                String minit = BookResult.getString("minit");
                String lname = BookResult.getString("lname");
                String branch_id = BookResult.getString("branch_id");
                String copies = BookResult.getString("No_of_copies");
                String available = BookResult.getString("available_copies");

                temp= new Vector<String>(Arrays.asList(book_id,title,authorName,fname,minit,lname,branch_id,copies,available));
                Bookresult.add(temp);
                
            }
            PrintBookSearch();
            BookResult.close();
            conn.close();
        }
        catch(SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error in connection: "+ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
    }
        
    }
    
    public String NameRegular(){
        StringBuilder Name = new StringBuilder();
        if(!"".equals(Fname)){
            Name.append(" fname LIKE '%"+Fname+"%' AND ");
        }
        else{
            Name.append("");
        }
        
        if(!"".equals(Minit)){
            Name.append(" minit LIKE '%"+Minit+"%'  AND ");
        }
        else{
            Name.append("");
        }
        if(!"".equals(Lname)){
            Name.append("  lname LIKE '%"+Lname+"%'  AND ");
        }
        else{
            Name.append("");
        }
        
        return Name.toString();
    }
    
    public void PrintBookSearch(){
        
        Bookcolumn= new Vector<String>();
        Bookcolumn.add("Book ID");
        Bookcolumn.add("Title");
        Bookcolumn.add("Author");
        Bookcolumn.add("Fname");
        Bookcolumn.add("Minit");
        Bookcolumn.add("Lname");
        Bookcolumn.add("Branch ID");
        Bookcolumn.add("Num of Copies");
        Bookcolumn.add("Available Copies");
        DefaultTableModel Bookmodel = new DefaultTableModel(Bookresult,Bookcolumn);
        jTable1.setModel(Bookmodel);
    }
    
    public String BookTitleRegular(String title){
        title=title.trim();
        if(title.contains("\'")){
            title=title.replaceAll("\'", "\'\'");
            return title;
        }
        else
            return title;
    }
    
    public void CheckOutNullCheck1(){

        if(Author==null)
            Author="";
        if(Author.equals("Full Name or Keyword"))
            Author="";
        if(CheckOutBookID==null)
            CheckOutBookID="";
        if(Title.equals("Full Title or Keyword"))
            Title="";
        if(Title==null)
            Title="";
        
        Author=Author.trim();
        CheckOutBookID=CheckOutBookID.trim();
        Title=Title.trim();
        
    }
    
    public void CheckOutNullCheck3(){
        if(CheckOutCardNo==null)
            CheckOutCardNo="";
        if(BranchID==null)
            BranchID="";
        BranchID=BranchID.trim();
        CheckOutCardNo=CheckOutCardNo.trim();
    }
    
    public void CheckOutNullCheck2(){
        
        if(CheckOutBookID==null)
            CheckOutBookID="";
        if(Title.equals("Full Title or Keyword"))
            Title="";
        if(Title==null)
            Title="";
        if(Fname==null)
            Fname="";
        if("Fname".equals(Fname))
            Fname="";
        if(Minit==null)
            Minit="";

        if(Lname==null)
            Lname="";
        if(Lname.equals("Lname"))
            Lname="";
        
        CheckOutBookID=CheckOutBookID.trim();
        Title=Title.trim();
        Fname=Fname.trim();
        Minit=Minit.trim();
        Lname=Lname.trim();
    }
    
    
    public void GetSelectRow1(){
        int Row=jTable1.getSelectedRow();
        if (Row<0)
             Row=0;

        SelectBookid=(String) jTable1.getValueAt(Row,0);
        SelectBranchid=(String) jTable1.getValueAt(Row, 6);
        
    }
 
    public void CheckOut(){
        int AVLNum,LoanNum;
        
        if(BranchID.equals(""))
            BranchID=SelectBranchid;
        AVLNum=checkAVLNum();
        LoanNum=checkLoanNum();
        if(AVLNum<1)//check book availablity 
            JOptionPane.showMessageDialog(null, "This book is currently NOT Available in this branch", "WARNING", JOptionPane.WARNING_MESSAGE);
        else{
            if(!CheckValidBorrower())
                JOptionPane.showMessageDialog(null, "The Borrower have an Invalid Card NO.!", "WARNING", JOptionPane.WARNING_MESSAGE);
            else{
                if(LoanNum>2)//check the borrower
                        JOptionPane.showMessageDialog(null, "The Borrower has already borrowed 3 books", "WARNING", JOptionPane.WARNING_MESSAGE);
                else
                       if (CreateLoan())
                          JOptionPane.showMessageDialog(null, "Check Out Successfully!!", "Haha", JOptionPane.INFORMATION_MESSAGE);
            }     
        }  
    }
    
    public boolean CreateLoan(){
        int LastLoanid=0;
        LastLoanid=GetLastLoanid();
        int CurrentLoanid=LastLoanid+1;
        
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
	Calendar dateOut = Calendar.getInstance();
        Date out = dateOut.getTime();
	dateOut.set(Calendar.DATE, (dateOut.get(Calendar.DATE) + 14));
	Date due = dateOut.getTime();
	String outString = dateFormat.format(out).toString();
	String dueString = dateFormat.format(due).toString();
        
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement LoanCreate = conn.createStatement();         //create in Book_loan table
            Statement FineCreate = conn.createStatement();
            LoanCreate.execute("INSERT INTO BOOK_LOANS VALUES "+
                    "(\'"+CurrentLoanid+"\',\'"+SelectBookid+"\',\'"+BranchID+"\',\'"+CheckOutCardNo+"\',\'"+outString+"\',\'"+dueString+"\', "+"null"+");");
            LoanCreate.close();
            FineCreate.execute("INSERT INTO FINES VALUES "+
                    "(\'"+CurrentLoanid+"\', null, null); ");
            FineCreate.close();
            conn.close();
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error in connection: "+ ex.getMessage(), "WARNING", JOptionPane.ERROR_MESSAGE);
            return false;
        }
           return true;
    }
    
    public int GetLastLoanid(){
        int LoanID=0;
        try {
            Connection conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement LoanSearch = conn1.createStatement();
            ////check the availability of the book
            ResultSet Loan= LoanSearch.executeQuery(
                    " SELECT MAX(loan_id) AS A" +
                    " FROM BOOK_LOANS");
            Loan.next();
            LoanID=Loan.getInt("A");
            LoanSearch.close();
            conn1.close();
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error in connection: "+ ex.getMessage(), "WARNING", JOptionPane.ERROR_MESSAGE);
        }
        
        return LoanID;
    }
    
    public int checkAVLNum(){
        int AVLNum=0;
        try {
            Connection conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement AvailableSearch = conn1.createStatement();
            ////check the availability of the book
            ResultSet Available= AvailableSearch.executeQuery(
                     " SELECT (BOOK_COPIES.no_of_copies-count(loan_id)) AS A" +
                     " FROM BOOK_COPIES LEFT JOIN  BOOK_LOANS ON BOOK_COPIES.book_id=BOOK_LOANS.book_id AND BOOK_COPIES.branch_id=BOOK_Loans.branch_id AND BOOK_LOANS.date_in is null " +
                     " WHERE BOOK_COPIES.book_id='"+SelectBookid+"' AND BOOK_COPIES.branch_id="+SelectBranchid +" "+
                     " GROUP BY BOOK_COPIES.book_id, BOOK_COPIES.branch_id;");
            Available.next();
            AVLNum=Available.getInt("A");
            Available.close();
            conn1.close();
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error in connection: "+ ex.getMessage(), "WARNING", JOptionPane.ERROR_MESSAGE);
        }
        
        return AVLNum;
    }
    
    public boolean CheckValidBorrower(){
        int returnNo=0;
        
        try {
            Connection conn3 = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement IDSearch = conn3.createStatement();
            ////check the availability of the book
            ResultSet Valid= IDSearch.executeQuery(
                    " SELECT card_no as A" +
                    " FROM BORROWER" +
                    " WHERE card_no="+CheckOutCardNo+";");
            Valid.next();
            returnNo=Valid.getInt("A");
            IDSearch.close();
            conn3.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error in connection: "+ ex.getMessage(), "WARNING", JOptionPane.ERROR_MESSAGE);
        }
        
        if(returnNo==0)
            return false;
        else
            return true;
    }
    
    public int checkLoanNum(){
        int LoanNum=3;
        
        
        try {
            Connection conn2 = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement LoanSearch = conn2.createStatement();
            ////check the availability of the book
            ResultSet LoanResult= LoanSearch.executeQuery(""+
             " SELECT COUNT(loan_id) AS A" +
             " FROM BOOK_LOANS" +
             " WHERE card_no='"+CheckOutCardNo+"' AND date_in is null;");
            LoanResult.next();
            LoanNum=LoanResult.getInt("A");
            LoanSearch.close();
            conn2.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error in connection: "+ ex.getMessage(), "WARNING", JOptionPane.ERROR_MESSAGE);
        }
        
        return LoanNum;
        
    }
    
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////     CHECK IN   /////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    
    public void LoanSearch(){
        Loanresult = new Vector<Vector<String>>();
        boolean DateError=false;
        String CardNo;
        
        
        CheckInNullCheck();
        CardNo=CheckInCardNoCheck();
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement LoanSearch = conn.createStatement();
            ResultSet LoanResult= LoanSearch.executeQuery(
                    " SELECT loan_id, card_no, book_id, branch_id, date_out, due_date, fname,lname,address,phone" +
                    " FROM BOOK_LOANS NATURAL JOIN BORROWER " +
                    " WHERE (fname LIKE '%"+Borrower+"%' OR lname LIKE '%"+Borrower+"%') AND BOOK_ID LIKE '%"+CheckInBookID+"%\' AND date_in is null "+CardNo+";"
            );
            
            
            while(LoanResult.next()){
                Vector<String> temp = new Vector<String>();
                String loan_id=LoanResult.getString("loan_id");
                String card_no=LoanResult.getString("card_no");
                String book_id= LoanResult.getString("book_id");
                String branch_id = LoanResult.getString("branch_id");
                String date_out=LoanResult.getString("date_out");
                String due_date = LoanResult.getString("due_date");
 //               String date_in = LoanResult.getString("date_in");
                String fname = LoanResult.getString("fname");
                String lname = LoanResult.getString("lname");
                String address = LoanResult.getString("address");
                String phone = LoanResult.getString("phone");
                
//                Date date = dateFormat.format(LoanResult.getTime("date_out"));
//                if(date.compareTo(Current)<0){
//                    DateError=true;
//                    break;
//                }
                temp= new Vector<String>(Arrays.asList(loan_id,card_no,book_id,branch_id,date_out,due_date,fname,lname,address,phone));
                Loanresult.add(temp);
                
            }
//            if(DateError)
//                JOptionPane.showMessageDialog(null, "System Time Error! Check your system Time or Contact DB Designer", "ERROR", JOptionPane.ERROR_MESSAGE);
//            else
                PrintLoanSearch();
            
            LoanResult.close();
            conn.close();
        }
        catch(SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error in connection: "+ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
    }
        
    }
    
    public void PrintLoanSearch(){
        Loancolumn= new Vector<String>();
        Loancolumn.add("Loan ID");
        Loancolumn.add("Card No");
        Loancolumn.add("Book ID");
        Loancolumn.add("Branch ID");
        Loancolumn.add("Date Out");
        Loancolumn.add("Date Due");
 //       Loancolumn.add("Date In");
        Loancolumn.add("Fname");
        Loancolumn.add("Lname");
        Loancolumn.add("Address");
        Loancolumn.add("Phone");
        DefaultTableModel Loanmodel = new DefaultTableModel(Loanresult,Loancolumn);
        jTable3.setModel(Loanmodel);
        
    }
    
    public void CheckInNullCheck(){
        Borrower=Borrower.trim();
        CheckInCardNo=CheckInCardNo.trim();
        CheckInBookID=CheckInBookID.trim();
        
        if(Borrower==null)
            Borrower="";
        if(CheckInBookID==null)
            CheckInBookID="";
        if(CheckInCardNo==null)
            CheckInCardNo="";
        
        if("Full or Partial Name".equals(Borrower))
            Borrower="";
        if("Full or Partial ID".equals(CheckInBookID))
            CheckInBookID="";
        if("Full Card No.".equals(CheckInCardNo))
            CheckInCardNo="";
        
    }
    
    public String CheckInCardNoCheck(){
        if(CheckInCardNo.equals(""))
            return "";
        else
            return " AND BOOK_LOANS.card_no="+CheckInCardNo;
        
    }
    
    public boolean GetSelectRow2(){
        int Row=jTable3.getSelectedRow();
        if (Row<0)
            return false;   
        else{
            CheckInLoanID=(String) jTable3.getValueAt(Row, 0);
            CheckInLoanID=CheckInLoanID.trim();
            return true;
        }
        
    }
    
    public void CheckIn(){
        if(GetSelectRow2()){//see if selected one row
              UpdateLoan();      //if selected,check in first
            if(FineCheck()) {//see if have fine
                 int dialogResult = JOptionPane.showConfirmDialog(null, "You checked in later than due, the fine is "+CheckInFine+", Do you wan to pay it now?", "Haha", JOptionPane.YES_NO_OPTION); //if have fine ask if want to pay fine now;
                 if(dialogResult==0){
                     PayWhenCheckIn();
                     JOptionPane.showMessageDialog(null, "Check In and Payed Successfully!", "Haha", JOptionPane.INFORMATION_MESSAGE);
                 }
                 else
                     JOptionPane.showMessageDialog(null, "Check In Successfully!", "Haha", JOptionPane.INFORMATION_MESSAGE);
            }        
            else                    //if not have fine, check in successful
                JOptionPane.showMessageDialog(null, "Check In Successfully!", "Haha", JOptionPane.INFORMATION_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(null, "Please select one tuple to Check In", "WARNING", JOptionPane.WARNING_MESSAGE);
    }
    
    public void UpdateLoan(){
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
	Calendar CurrentDate = Calendar.getInstance();
        Date Current = CurrentDate.getTime();
	String DateString = dateFormat.format(Current).toString();
        
        try{
            Connection conn4 = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement LoanAlter = conn4.createStatement();
            LoanAlter.execute(
                    " UPDATE book_loans" +
                    " SET date_in=\'"+DateString+"\'" +
                    " WHERE loan_id="+CheckInLoanID+";");
            LoanAlter.close();
            conn4.close();
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Error in connection: "+ ex.getMessage(), "WARNING", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    public boolean FineCheck(){
        float Fine=0;
        int PassDates=0;
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement FineCheck=conn.createStatement();
            ResultSet Due=FineCheck.executeQuery(
                    " SELECT TIMESTAMPDIFF(DAY,due_date, date_in) AS A" +
                    " FROM BOOK_LOANS" +
                    " WHERE loan_id="+CheckInLoanID+";");
            Due.next();
            PassDates=Due.getInt("A");
            Due.close();
            conn.close();
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Error in connection: "+ ex.getMessage(), "WARNING", JOptionPane.ERROR_MESSAGE);
        }
        
        if(PassDates<1){
            CheckInUpdateFine2();
            return false;
        }
           
        else{
            Fine=(float) (0.25*PassDates);
            CheckInFine=Fine;
            CheckInUpdateFine1(Fine);
            return true;
        }  
    }
    


    public void CheckInUpdateFine2(){
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement Update=conn.createStatement();
            Update.execute(
                    " UPDATE fines" +
                    " SET fine_amt='0',paid=null" +
                    " WHERE loan_id='"+CheckInLoanID+"';");
            Update.close();
            conn.close();
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Error in connection: "+ ex.getMessage(), "WARNING", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void CheckInUpdateFine1(float Fine){
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement Update=conn.createStatement();
            Update.execute(
                    " UPDATE fines" +
                    " SET fine_amt='"+Fine+"',paid=false" +
                    " WHERE loan_id='"+CheckInLoanID+"';");
            Update.close();
            conn.close();
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Error in connection: "+ ex.getMessage(), "WARNING", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void PayWhenCheckIn(){
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "q6egmoB1");
            Statement Update=conn.createStatement();
            Update.execute(
                    " UPDATE fines" +
                    " SET paid=true" +
                    " WHERE loan_id='"+CheckInLoanID+"';");
            Update.close();
            conn.close();
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Error in connection: "+ ex.getMessage(), "WARNING", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            @Override
//            public void run() {
//                new GUI().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JTable ResultTable;
}
